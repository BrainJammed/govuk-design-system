---
title: Checkboxes
description: Let users select one or more options by using the Checkboxes component
section: Components
aliases: check boxes, tickboxes, tick boxes
backlog_issue_id: 37
layout: layout-pane.njk
---

{% from "_example.njk" import example %}

Let users select one or more options by using the checkboxes component.

{{ example({group: "components", item: "checkboxes", example: "default", html: true, nunjucks: true, open: false, size: "m" }) }}

## When to use this component

Use the checkboxes component when you need to help users:

- select multiple options from a list
- toggle a single option on or off

## When not to use this component

Don’t use the checkboxes component if users can only choose one option from a selection. In this case, use the [radios component](../radios/).

## How it works

Checkboxes are grouped together in a `<fieldset>` with a `<legend>` that describes them, as shown in the examples on this page. This is usually a question, like ‘How would you like to be contacted?’.

If you are asking just [one question per page](../../patterns/question-pages/#start-by-asking-one-question-per-page) as recommended, you can set the contents of the `<legend>` as the page heading. This is good practice as it means that users of screen readers will only hear the contents once.

Read more about [why and how to set legends as headings](../../get-started/labels-legends-headings).

There are 2 ways to use the checkboxes component. You can use HTML or, if you’re using [Nunjucks](https://mozilla.github.io/nunjucks/) or the [GOV.UK Prototype Kit](https://govuk-prototype-kit.herokuapp.com), you can use the Nunjucks macro.

{% set arguments = getMacroArguments("src/components/checkboxes/macro-arguments.json") %}

{% set argumentsHTML %}

{% for group in arguments %}

  {% if group.groupName != "" %}
  <h3 id="nunjucks-macro-arguments-{{group.groupName}}">{{group.groupName}}</h3>
  {% endif %}

  <table class="govuk-table">
    <caption class="govuk-table__caption govuk-visually-hidden">
      {% if group.groupName == "" %}
        Nunjucks macro arguments
      {% else %}
        {{group.groupName}}
      {% endif %}
    </caption>
    <thead class="govuk-table__head">
      <tr class="govuk-table__row">
        <th class="govuk-table__header" scope="col">Name</th>
        <th class="govuk-table__header" scope="col">Type</th>
        <th class="govuk-table__header" scope="col">Required</th>
        <th class="govuk-table__header" scope="col">Description</th>
      </tr>
    </thead>
    <tbody class="govuk-table__body">

      {% for argument in group.arguments %}
        <tr class="govuk-table__row">
          <th class="govuk-table__header" scope="row">{{argument.name}}</th>
          <td class="govuk-table__cell ">{{argument.type}}</td>
          <td class="govuk-table__cell ">{{argument.required}}</td>
          <td class="govuk-table__cell ">{{argument.description | safe}}</td>
        </tr>
      {% endfor %}

    </tbody>
  </table>

{% endfor %}

{% endset %}

{% from "details/macro.njk" import govukDetails %}

{{ govukDetails({
  summaryText: "Nunjucks macro arguments",
  html: argumentsHTML,
  attributes:{
    id: "nunjucks-macro-arguments"
  }
})}}

{{ example({group: "components", item: "checkboxes", example: "default", html: true, nunjucks: true, open: true, size: "m"}) }}

### Checkbox items with hints

You can add hints to checkbox items to provide additional information about the options.

{{ example({group: "components", item: "checkboxes", example: "hint", html: true, nunjucks: true, open: true, size: "s"}) }}

### Conditionally revealing content

You can add conditionally revealing content to checkboxes, so users only see content when it’s relevant to them. For example, you could reveal a phone number input only when a user chooses to be contacted by phone.

{{ example({group: "components", item: "checkboxes", example: "conditional-reveal", html: true, nunjucks: true, open: false, size: "xl"}) }}

Keep it simple - if you need to add a lot of content, consider showing it on the next page in the process instead.

## Research on this component

Read a blog post about [updates to the radios and checkboxes components](https://designnotes.blog.gov.uk/2016/11/30/weve-updated-the-radios-and-checkboxes-on-gov-uk/).
